#
# Copyright (C) 2006, 2007 INRIA (French National Institute for Research in
# Computer Science and Control)
#
# This library is free software; you can redistribute it and/or modify it under
# the terms of the GNU Lesser General Public License as published by the Free
# Software Foundation; either version 2.1 of the License, or (at your option)
# any later version.
#
# This library is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public License for more
# details.
#
# You should have received a copy of the GNU Lesser General Public License
# along with this library; if not, write to the Free Software Foundation, Inc.,
# 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301 USA
#
#-------------------------------------------------------------------------------
# General Information
#-------------------------------------------------------------------------------
# File          : tests/SConscript
# Author        : Jerome Milan
# Created on    : Wed Aug 23 2006
# Last modified : Mon Jan 22 2006
#
# Version : 0.1.1
# Licence : GNU Lesser General Public License (LGPL)
#           Copyright (C) 2006, 2007 INRIA
#-------------------------------------------------------------------------------
# History :
#
# 0.1.1: Mon Jan 22 2006 by JM
#     - Added 'dist' command line argument for creating tgz package
#
#-------------------------------------------------------------------------------

#-------------------------------------------------------------------------------
# Short description
#-------------------------------------------------------------------------------
#
# This is the SCons input file used to build the tests programs of
# the TIFA library.
#
#-------------------------------------------------------------------------------

#
# Imported Python modules
#
import os

#
# Imported variables
#
Import('env')
Import('top_dir')
Import('lib_dir')
Import('lib_build_dir')
Import('tifa_libname')
Import('tifa_distname')
Import('tests_dir')

#
# New environement
#
testenv = env.Copy()

#
# Current working directory
#
cur_wrk_dir  = tests_dir
#
# Source directory
#
tests_srcdir  = 'src'
#
# Programs' include directory
#
tests_incdir  = 'include'
#
# Programs' installation directory
#
install_tests_dir  = testenv['BINDIR']
#
# Library's include directories
#
lib_algo_incdir  = os.path.join(lib_dir, 'algo', 'include')
lib_data_incdir  = os.path.join(lib_dir, 'data', 'include')
lib_utils_incdir = os.path.join(lib_dir, 'utils', 'include')

#
# Preprocessor flags
#
testenv.Append(
    CPPPATH = [
        top_dir,
        os.path.join(lib_dir,   lib_algo_incdir),
        os.path.join(lib_dir,   lib_data_incdir),
        os.path.join(lib_dir,   lib_utils_incdir),
        os.path.join(tests_dir, tests_incdir)
    ]
)
#
# If the GMP library is installed in some non-standard location
#
if (testenv['GMP_INCDIR'] != ""):
    testenv.Append(CPPPATH = [testenv['GMP_INCDIR']])

#
# Compiler options
#
testenv.Append(CCFLAGS = ' -std=c99')

#
# Libraries to link to
#
libs_to_link = ['m', 'gmp', tifa_libname]

#
# Library path
#
lib_path = [lib_build_dir]
#
# If the GMP library is installed in some non-standard location
#
if (testenv['GMP_LIBDIR'] != ""):
    lib_path.append(testenv['GMP_LIBDIR'])

#
# Tests program's files
#
tbs_src = [os.path.join(tests_srcdir, 'test_bernsteinisms.c')]
tge_src = [os.path.join(tests_srcdir, 'test_gauss_elim.c')]
tcf_src = [os.path.join(tests_srcdir, 'test_cont_frac.c')]
txt_src = [os.path.join(tests_srcdir, 'test_x_tree.c')]

#-------------------------------------------------------------------------------
# Build the tests programs
#-------------------------------------------------------------------------------
if "tests" in COMMAND_LINE_TARGETS:

    test_progs = []

    tbs = testenv.Program(
                'test_bernsteinisms',
                LIBS = libs_to_link,
                LIBPATH = lib_path,
                source = tbs_src
            )
    test_progs.append('test_bernsteinisms')

    tge = testenv.Program(
            'test_gauss_elim',
            LIBS = libs_to_link,
            LIBPATH = lib_path,
            source = tge_src
        )
    test_progs.append('test_gauss_elim')

    tcf = testenv.Program(
            'test_cont_frac',
            LIBS = libs_to_link,
            LIBPATH = lib_path,
            source = tcf_src
        )
    test_progs.append('test_cont_frac')

    txt = testenv.Program(
            'test_x_tree',
            LIBS = libs_to_link,
            LIBPATH = lib_path,
            source = txt_src
        )
    test_progs.append('test_x_tree')
    testenv.Alias('tests', test_progs)
    testenv.Clean('tests', test_progs)

#-------------------------------------------------------------------------------
# Install programs target: none!
#-------------------------------------------------------------------------------

#-------------------------------------------------------------------------------
# Files to be distributed in the TIFA tar package
#-------------------------------------------------------------------------------
if "dist" in COMMAND_LINE_TARGETS:
    archive = env.Tar(tifa_distname, tbs_src)
    env.Tar(tifa_distname, tge_src)
    env.Tar(tifa_distname, tcf_src)
    env.Tar(tifa_distname, txt_src)
    env.Tar(tifa_distname, os.path.join(tests_dir, tests_incdir))
    env.Tar(tifa_distname, 'SConscript')
    env.Alias('dist', archive)
