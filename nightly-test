#!/bin/sh
# Usage: nightly-test <MAKE_ARGS>
# If you use this in your crontab, since cron does not have access to
# ssh-agent, a trick is the following:
# 1) run from your home directory: ssh-keygen -N "" -t rsa -f .ssh/cle_gforge
#    This will create a ssh key with empty passphrase in .ssh/cle_gforge,
#    with the public key in .ssh/cle_gforge.pub
# 2) add the content of .ssh/cle_gforge.pub in the list of your ssh keys on
#    gforge.inria.fr (this will be added in authorized_keys)
# 3) add the following lines in your .ssh/config file:
# Host scm.gforge.inria.fr
#    IdentityFile /users/mygroup/mylogin/.ssh/cle_gforge
# 4) since run.c59 also calls ssh, you need to add also IdentityFile ... for
#    the computer on which you run nightly-test, and to add the content of
#    cle_gforge.pub in the authorized_keys on that computer.
set -e
# If the DIR variable is set, then use it as the basename of the temp directory.
: ${DIR=cado-nightly}
# If the USER variable is set, use it instead of the login name for doing
# the checkout.
: ${USER=`whoami`}
cd /tmp
/bin/rm -fr "$DIR"
mkdir "$DIR"
# The following test should be useless, but let's be paranoid.
test ! -h "$DIR"
svn checkout svn+ssh://${USER}@scm.gforge.inria.fr/svn/cado/trunk/dist/src "$DIR"
cd "$DIR"
# first build a tarball
make -f Makefile.all dist VERSION=dev "$@"
# now extract the tarball and test it
tar zxf cado-nfs-dev.tgz

# If the cado repository contains a Makefile.local for this machine, use
# it.
h=`hostname`
if [ -f Makefile.local.$h ] ; then
    echo "Using Makefile.local.$h"
    cp -f Makefile.local.$h  cado-nfs-dev/Makefile.local
fi

cd cado-nfs-dev
make "$@"
./new_run.c59
exit
cd /tmp
/bin/rm -fr "$DIR"

