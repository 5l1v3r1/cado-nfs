
# The files in this directory are automatically generated by mpfq using
# the following commands. The variable MPFQ must point to the src/
# subdirectory of the mpfq source tree. Note that this works only with
# the development version of mpfq, not the released one.

MPFQ:=$$HOME/Mp/mpfq/src

all: basic binary-fields

basic:
	$(MPFQ)/simd/abase.pl
	/bin/cp -f $(MPFQ)/simd/binary-dotprods-backends.h .
	/bin/cp -f $(MPFQ)/include/mpfq/mpfq.h .
	ls abase_*[ch] mpfq*[ch] | xargs -n 1 sed -e s,mpfq/,, -i
	$(MPFQ)/test/mk_name_k.pl  name=ab --noshift general_prefix=abase > mpfq_name_ab.h

binary-fields:
	# This is slightly more complicated, as we need mpfq, a built
	# image with the helper binary, and also some additional tweaks.
	if ! [ -e /tmp/mpfq ] ; then mkdir /tmp/mpfq ; fi
	if ! [ -d /tmp/mpfq ] || ! [ -w /tmp/mpfq ] || ! [ -x /tmp/mpfq ] ; then \
	    echo "/tmp/mpfq not a writeable directory, binary fields skipped" ; \
	    exit 0 ; \
	fi ; \
	if ! [ -x /tmp/mpfq/gf2n/helper/helper ] ; then \
	(cd /tmp/mpfq ; cmake $(MPFQ) ; make helper) ; \
	fi
	$(MPFQ)/gf2n/gen_gf2n.pl helper=/tmp/mpfq/gf2n/helper/helper table=/tmp/mpfq/gf2x/wizard.table output_path=. n=128 w=64
	$(MPFQ)/gf2n/gen_gf2n.pl helper=/tmp/mpfq/gf2n/helper/helper table=/tmp/mpfq/gf2x/wizard.table output_path=. n=64 w=64
	patch -p1 -d. < pclmul.patch


clean:
	-rm -f abase_p16.c
	-rm -f abase_p16.h
	-rm -f abase_p16_t.c
	-rm -f abase_p16_t.h
	-rm -f abase_u64k1.c
	-rm -f abase_u64k1.h
	-rm -f abase_u64k1_t.c
	-rm -f abase_u64k1_t.h
	-rm -f abase_u64k2.c
	-rm -f abase_u64k2.h
	-rm -f abase_u64k2_t.c
	-rm -f abase_u64k2_t.h
	-rm -f abase_vbase.c
	-rm -f abase_vbase.h
	-rm -f binary-dotprods-backends.h
	-rm -f mpfq.h
	-rm -f mpfq_name_ab.h
	-rm -f *~
