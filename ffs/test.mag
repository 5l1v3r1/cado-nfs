load "skewgauss.mag";

PP<t> := PolynomialRing(GF(2));
MP<x> := PolynomialRing(PP);
F := x^5 + x^4 + x^3 + x^2 + x + t^2;
G := x*t^25 + x*t^24 + x*t^23 + x*t^21 + x*t^17 + x*t^16 + x*t^15 + x*t^13 + x*t^10 + x*t^9 + x*t^7 + x*t^5 + x*t^3 + x + t^26 + t^25 + t^24 + t^23 + t^21 + t^20 + t^17 + t^14 + t^13 + t^11 + t^9 + t^6 + t^4 + t^3 + t^2;


/* Old choice for F,G:
F := x^5 + x*t + x + t^2  ;
G := x*t^25 + x*t^24 + x*t^22 + x*t^20 + x*t^19 + x*t^15 + x*t^14 + x*t^13 + x*t^12 + x*t^11 + x*t^10 + x*t^9 + x*t^7 + x*t^5 + x*t^2 + x*t + x + t^26 + t^21 + t^18 + t^16 + t^15 + t^13 + t^10 + t^9 + t^8 + t^7 + t^6;
special q was:  3468B8B 810E4A
*/

I := 13;
J := 12;


/*  // Compute a special-q
repeat
    repeat
        q := Random(PP, 25);
    until IsIrreducible(q);
    Fq := ext<GF(2) | q>;
    roo := Roots(PolynomialRing(Fq)![ Fq!x : x in Eltseq(F) ]);
until #roo ge 1;
rho := PP!Eltseq(roo[1][1]);

q,rho;

*/


//      3F29C8D 1E3DC3
q := t^25 + t^24 + t^23 + t^22 + t^21 + t^20 + t^17 + t^15 + t^12 + t^11 + t^10 + t^7 + t^3 + t^2 + 1;
rho := t^20 + t^19 + t^18 + t^17 + t^13 + t^12 + t^11 + t^10 + t^8 + t^7 + t^6 + t + 1;
IntegerToString(Seqint([ Integers()!x : x in  Eltseq(q) ], 2), 16),
IntegerToString(Seqint([ Integers()!x : x in  Eltseq(rho) ], 2), 16);

a0, b0, a1, b1 := skewgauss(q, rho, 0);

function hex2pol(x)
    return PP!Intseq(StringToInteger(x, 16), 2);
end function;

function ij2ab(i,j)
    return i*a0+j*a1, i*b0+j*b1;
end function;

function ab2ij(a,b)
    return ((a*b1 - b*a1) div q), ((-a*b0 + b*a0) div q);
end function;

function ij2pos(i,j, I)
    ii := Seqint([Integers()!xx : xx in Eltseq(i)], 2);
    jj := Seqint([Integers()!xx : xx in Eltseq(j)], 2);
    return ii + 2^I*jj;
end function;

function Normf(i,j)
    a,b := ij2ab(i,j);
    return Numerator(Evaluate(F, a/b)*b^Degree(F));
end function;

function Normg(i,j)
    a,b := ij2ab(i,j);
    return Numerator(Evaluate(G, a/b)*b^Degree(G));
end function;
