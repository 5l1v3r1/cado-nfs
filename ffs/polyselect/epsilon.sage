load init_rings.sage
At=A
load alpha.sage

def sigma(f,s,e=0):
    d=f.degree()
    fc=f.coeffs()
    return d*(e-s/2)+max([fc[i].degree()+i*s for i in range(d+1)])

def sigma_bar(f,s,e=0):
    deltas=range(-10,10)
    distrib=[0.000300000000000000, 0.000500000000000000,0.000600000000000000,0.00170000000000000, 0.00370000000000000,0.00750000000000000,
            0.0159000000000000, 0.0302000000000000, 0.0546000000000000, 0.106700000000000, 0.390900000000000, 0.192500000000000,
            0.0960000000000000, 0.0482000000000000, 0.0245000000000000, 0.0133000000000000, 0.00600000000000000, 0.00360000000000000,
            0.00170000000000000, 0.00160000000000000]
    result=0
    for i in range(20):
        result+=distrib[i]*sigma(f,s+deltas[i],e)
    return result

def epsilon(f,s,e=0):
    return alpha_infty(f,s)+sigma(f,s,e)

def epsilon_bar(f,s,e=0):
    deltas=range(-10,10)
    distrib=[0.000300000000000000, 0.000500000000000000,0.000600000000000000,0.00170000000000000, 0.00370000000000000,0.00750000000000000,
            0.0159000000000000, 0.0302000000000000, 0.0546000000000000, 0.106700000000000, 0.390900000000000, 0.192500000000000,
            0.0960000000000000, 0.0482000000000000, 0.0245000000000000, 0.0133000000000000, 0.00600000000000000, 0.00360000000000000,
            0.00170000000000000, 0.00160000000000000]
    result=0
    for i in range(20):
        result+=distrib[i]*epsilon(f,s+deltas[i],e)
    return result
