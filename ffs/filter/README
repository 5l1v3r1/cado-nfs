README on how to compile and run the filtering step for FFS.

In the examples, command lines are given for GF(2). Replace f2 by f3 to
compile for GF(3).
All directories are given assuming that CADO-NFS repository root directory is
called cado-nfs.

1. Compilation:
===============

To compile dup2-ffs-f2 without gf2x, go directly to Step 1

Step 0: Use gf2x

  In cado-nfs/ffs/Makefile, uncomment the line beginning by:
  
    # GF2XPREFIX = ...

  In cado-nfs/filter/CMakeLists-nodist.txt, uncomment the following lines:
  
    #link_directories (${CADO_NFS_BINARY_DIR}/gf2x/.libs)
    ...
    #target_link_libraries(ffs-f2 utils pthread libfppol-f2.a gf2x)
    ...
    #add_dependencies(purge-ffs-f2 gf2x-build)

  and comment the following line:
  
    target_link_libraries(f2 utils pthread libfppol-f2.a)

  Then, in cado-nfs directory, type:
  
    make gf2x-build

Step 1: Compile utils library from CADO-NFS

  In cado-nfs/utils directory, type:

    make utils

Step 2: Compile freerels binary for FFS and libfppol-f*.a

  In cado-nfs/ffs/Makefile, uncomment all the lines between:

    #begin for freerels
    ...
    #end for freerels

  Then, in cado-nfs/ffs directory, type:

    make

Step 3: Compile filtering binaries for DL

  In cado-nfs directory, type:

    make dup1 dup2-ffs-f2 purge merge-dl replay-dl


2. Run:
=======

To run the filtering step for FFS, see the top filter.sh script in this
directory.
