###########################################################################
#     Parameter file for Cado-NFS
###########################################################################
# See params/params.c91 for an example which contains some documentation.

# Anything after a # is a comment, until end of line.
# Any empty line is ignored
#
#
# Each parameter should be on an individual line, like
#   param0=42.17
#

###########################################################################
# General parameters
###########################################################################

# Sample parameter file for a 190-digit gnfs input
# Example: cadofactor.pl wdir=... name=... n=...

name=c190
parallel=1           # do we use parallel computation?
delay=300

machines=mach_desc      # file describing available computers for parallel
                        # computation

###########################################################################
# Polynomial selection
###########################################################################

degree=5                # degree of the algebraic polynomial
polsel_delay=300             # time between two checks
polsel_nice=4            # nice level for selection

## Parameters of polyselect
# note: those parameters are just a guess, they might be far from optimal
polsel_P=5000000             # choose lc(g) with two prime factors in [P,2P]
polsel_maxnorm=65            # max. lognorm of polynomials (before rootsieve)
polsel_admax=5e7             # max value for lc(f)
polsel_adrange=5e5           # individual tasks
polsel_incr=60               # forced divisor of lc(f)

# Shi Bai got for RSA-190
# lognorm: 64.90, alpha -8.81
# norm 8.395467e-19 alpha -8.805648 e 1.465e-14 rroots 3
# cf http://wwwmaths.anu.edu.au/~bai/factor/rsa190.html

###########################################################################
# Sieve
###########################################################################

# (r,a) means rational or algebraic side
# rlim/alim is the bound for sieving
# lpbr/lpba is the (base 2 log of the) large prime bound
# mfbr/mfba is the (base 2 log of the) limit for the cofactor we try to
#                                      split into large primes.
# rlambda/alambda is the early-abort ratio: if after sieving the
#                                      approximate norm is more than
#                                      lambda times lpb, we reject.
rlim=100000000
alim=200000000
lpbr=32
lpba=32
mfbr=64
mfba=96
rlambda=2.1
alambda=2.8

I=14                    # Sieving range in lattice siever
qmin=200000000          # Start of the special-q range
qrange=200000           # The size of an elementary sieving task
checkrange=2000000      # We check if we have enough after each step
                        # of that many relations found.
sievenice=10
sieve_max_threads=2

###########################################################################
# Filtering
###########################################################################

keeppurge=160           # shrink in purge if excess exceeds keeppurge
maxlevel=25             # maximal merge level
ratio=1.1  
bwstrat=3               

###########################################################################
# Linear algebra
###########################################################################

bwmt=2x2                # Multithreading level of Block-Wiedemann

###########################################################################
# Characters
###########################################################################

nkermax=30              # maximal size of computed kernel
nchar=50                # number of characters
