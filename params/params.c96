###########################################################################
#     Parameter file for Cado-NFS
###########################################################################
# See params/params.c91 for an example which contains some documentation.

# Anything after a # is a comment, until end of line.
# Any empty line is ignored
#
#
# Each parameter should be on an individual line, like
#   param0=42.17
#

###########################################################################
# General parameters
###########################################################################

# Sample parameter file for a 96-digit gnfs input
# Example: cadofactor.pl wdir=... name=... n=...

name=c96
parallel=1              # do we use parallel computation?
delay=60                # time in seconds between two checks

machines=mach_desc      # file describing available computers for parallel
                        # computation

###########################################################################
# Polynomial selection with Kleinjung's algorithm
###########################################################################

degree=4                # degree of the algebraic polynomial
polsel_delay=60              # time between two checks
polsel_nice=4            # nice level for selection

# on the test number
# 136960567477911232827085375704850747150376015831973445877837593876746854479714821885706519161251
# we get
# lognorm: 33.34, alpha: -4.22 E=29.13
# Murphy's E(Bf=10000000,Bg=5000000,area=1.00e+16)=1.92e-08

## Parameters of polyselect
polsel_P=20000               # choose lc(g) with two prime factors in [P,2P]
polsel_maxnorm=34            # max. lognorm of polynomials (before rootsieve)
polsel_admax=1e6             # max value for lc(f)
polsel_adrange=1e5           # individual tasks
polsel_kmax=20               # rotation is bounded by 2^kmax
polsel_incr=60               # forced divisor of lc(f)
polsel_lq=2                  # special-q in lc(g) has such many factors

###########################################################################
# Sieve
###########################################################################

# (r,a) means rational or algebraic side
# rlim/alim is the bound for sieving
# lpbr/lpba is the (base 2 log of the) large prime bound
# mfbr/mfba is the (base 2 log of the) limit for the cofactor we try to
#                                      split into large primes.
# rlambda/alambda is the early-abort ratio: if after sieving the
#                                      approximate norm is more than
#                                      lambda times lpb, we reject.
rlim=500000
alim=1000000
lpbr=25
lpba=25
mfbr=50
mfba=50
rlambda=2.1
alambda=2.2

I=11                    # Sieving range in lattice siever
qmin=1000000            # Start of the special-q range
qrange=50000            # The size of an elementary sieving task
firstcheck=2980000      # try filtering only up from that many relations
sievenice=10            # nice level for the sieving jobs
sieve_max_threads=2

###########################################################################
# Filtering
###########################################################################

keeppurge=160           # maximal excess wanted after purge
                        # (purge shrinks if needed)
maxlevel=15
cwmax=100  
rwmax=100  
ratio=1.1  
bwstrat=3

###########################################################################
# Linear algebra
###########################################################################

bwmt=2x2                # Multithreading level of Block-Wiedemann ; Use
                        # <m>x<n> for bwc, or only one integer for bw.
                        # Note that this will be substituted with 1x1
                        # unless PTHREADS have been enabled.
bwc_interval=100        # checkpointing interval for bwc.

###########################################################################
# Characters
###########################################################################

nkermax=30              # maximal size of computed kernel
nchar=50                # number of characters
