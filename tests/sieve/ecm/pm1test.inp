# A file with numbers to test. 
# Everything after a # is a comment. Empty lines (modulo comment) are removed
# altogether.
# Lines (up to comment) are the required output from testbench, the input
# is the product of the listed numbers.

# First a few less-than-32-bit input numbers. This uses modredc_ul on 32-bit and 64-bit machines.
1033 10007 # orders = [2*3*43, 5003]. Factor found in stage 1
10007 10009 # orders = [5003, 2^2*3*139]. Factor found in stage 2
1033 10009 # orders = [2*3*43, 2^2*3*139]. First factor found in stage 1
1013 1033 # orders = [2^2*23, 2*3*43]. Both found in stage 1, but different powers of 2 in order, so stage 1 backtracking must find them
1019 1031 # orders = [2*509, 5*103]. Both found in step 2, but in different "giant-steps", so back-tracking must find them

# Some >32, <48-bit numbers. This uses modredul_15ul on 32-bit machines and modredc_ul on 64-bit machines.
1033 100000007 # Found in stage 1
10009 100000007 # Found in stage 2

# Some >48, <62-bit numbers. This uses modredul_2ul2 on 32-bit machines and modredc_ul on 64-bit machines.
1033 100000000000031
10009 100000000000031

# Some numbers >2^63, < 2^64. This uses mod_mpz on 32-bit machines and modredc_ul on 64-bit machines.
1033 8928724140227357
10009 921507846623557

# Some numbers > 2^64, <2^96. This uses mod_mpz on 32-bit machines and modredc_15ul on 64-bit machines.
1033 1142876689949091367
10009 117953004367810189

# Some numbers > 2^96, <2^126. This uses mod_mpz on 32-bit machines and modredc_2ul2 on 64-bit machines.
1033 1227154501673019749754795043
10009 126651074056172385003167531

# Some numbers > 2^126. This uses mod_mpz on both 32-bit and 64-bit machines.
1033 164705889119524909711217138156712781
10009 16998819408579201891466410602046607

# Some numbers > 2^200. This uses mod_mpz on both 32-bit and 64-bit machines.
1033 1555603140618577227049334068094058666526817999789731689853
10009 160549310046856856383451103241199180989329902466059829953
