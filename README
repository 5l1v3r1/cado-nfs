Required software tools:
=======================

*) GMP (http://gmplib.org): usually installed in most Linux distributions
*) ECM (http://gforge.inria.fr/projects/ecm/)
*) PARI/GP (http://pari.math.u-bordeaux.fr/)
*) Magma (http://magma.maths.usyd.edu.au/magma/)

[Optional: configure]
=====================

cat <<EOF > Makefile.local
GMP=/usr
GMPLIB=-lgmp
GMPINCLUDE=/usr/include

ECM=/users/spaces/logiciels/ecm-6.1.2/x86_64
EOF

(cd utils; ln -s ../Makefile.local .)
(cd polyselect; ln -s ../Makefile.local .)
(cd sieve; ln -s ../Makefile.local .)
(cd sqrt/naive; ln -s ../../Makefile.local .)


Compile:
=======

(cd utils; make)
(cd polyselect; make)
(cd sieve; make)
(cd linalg; make)
(cd sqrt/naive; make)

Run an example:
===============

tmp=/tmp
name=c59

# (for csh addicts:)
# setenv tmp /tmp
# setenv name c59


cat <<EOF > $tmp/$name
n:71641520761751435455133616475667090434063332228247871795429
EOF


polyselect/polyselect -full -e 1000000 < $tmp/$name > $tmp/$name.poly


cd sieve
## this has to be done by hand, sorry!
## and it depends on the polynomial found by polyselect (also the b-bound 1300
## below might be too small with different polynomials)

./mkroots.sh $tmp/$name.poly > $tmp/$name.roots
## SIEVING_STEP
./sieve -poly $tmp/$name.poly -fb $tmp/$name.roots -1000000 1000000 1 1300 > $tmp/$name.rels_raw
# checking norms and splitting large cofactors
./checknorms -poly $tmp/$name.poly $tmp/$name.rels_raw > $tmp/$name.rels
cd ..

########## will shortly become deprecated; see Examples/doit.sh for a start

# create matrix
linalg/procrels $tmp/$name.rels > $tmp/$name.mat_raw
## If excess is not positive, goto SIEVING_STEP with larger value
## for example ./sieve ... -1000000 1000000 1301 1400 >> $tmp/$name.rels_raw

# reduce excess of relations (optional)
linalg/matprune -keep 128 $tmp/$name.mat_raw > $tmp/$name.mat_raw2
mv $tmp/$name.mat_raw2 $tmp/$name.mat_raw

# sort matrix columns (not mandatory, but speeds up the linear algebra)
linalg/matsort $tmp/$name.mat_raw > $tmp/$name.mat
linalg/linalg $tmp/$name.mat > $tmp/$name.ker_raw
linalg/characters $tmp/$name.mat $tmp/$name.ker_raw $tmp/$name.poly 20 40 > $tmp/$name.ker


cd sqrt/naive
./tryonedep.sh -depnum 0 $tmp/$name.mat $tmp/$name.ker $tmp/$name.poly
## If gcd is trivial, try another dependency (-depnum 1, -depnum 2, ...)

