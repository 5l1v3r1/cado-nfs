Required software tools:
========================

*) GMP (http://gmplib.org): usually installed in most Linux distributions
*) The GCC compiler works ; some others might, but it is untested.
*) GNU make and CMake for building (CMake is installed on the fly if missing)

[Configure]
===========

if your site needs tweaks, set such tweaks using environment variables,
or via the shell script local.sh ; you may start with

cp local.sh.example local.sh

Edit according to your local settings and your taste. local.sh.example
gives documentation on the recognized environment variables and their
effect.

Note that tweaks in local.sh are global ; although earlier CADO versions
offered the possibility of setting tweaks at a sub-directory level, this
is no longer so easily doable (one could try to restore this
functionality, though).


Compile:
========

make

It may or may not be relevant to do ``make install'' as well ; at the
moment consider ``make install'' to be badly tested.

Check that your SSH configuration is correct:
=============================================

The master script uses SSH to connect to available computing resources
(including localhost). In order to avoid the script asking your password
or passphrase, you must have a public-key authentication and an agent.

Also, since localhost has an IP and key that varies, you'd better have
those 3 lines in your $HOME/.ssh/config:

Host    localhost
        StrictHostKeyChecking no
        UserKnownHostsFile /dev/null

You should also put in $HOME/.ssh/authorized_keys your public key.

If everything is correctly configured, when you type 

ssh localhost

you should end up with a new shell on your machine, without having to
type any password/passphrase.

Run an example:
===============

./run_example.sh c59

The script tries to factor a 59 digit number.

For other numbers, create a parameter file analogous to params/params.c59
and call ./run_example.sh the same way.


