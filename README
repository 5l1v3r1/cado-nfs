Required software tools:
=======================

*) GMP (http://gmplib.org): usually installed in most Linux distributions
*) ECM (http://gforge.inria.fr/projects/ecm/)
*) PARI/GP (http://pari.math.u-bordeaux.fr/)
*) Magma (http://magma.maths.usyd.edu.au/magma/)

[Optional: configure]
=====================

cat <<EOF > Makefile.local
GMP=/usr
GMPLIB=-lgmp
GMPINCLUDE=/usr/include

ECM=/users/spaces/logiciels/ecm-6.1.2/x86_64
EOF

Compile:
=======

make clean ; make

(really do make clean if you happen to touch .h files, are there are no
auto-dependencies)

Run an example:
===============

tmp=/tmp
name=c59

# (for csh addicts:)
# setenv tmp /tmp
# setenv name c59


cat <<EOF > $tmp/$name
n:71641520761751435455133616475667090434063332228247871795429
EOF

polyselect/polyselect -full -e 1000000 < $tmp/$name > $tmp/$name.poly

# note for CACAO members: some data files with sieve relations are available
# in /local/fleur/cado/Examples/{c20,c59,c80}

## this has to be done by hand, sorry!
## and it depends on the polynomial found by polyselect (also the b-bound 2500
## below might be too small with different polynomials)

# creating factor base
(cd sieve; ./mkroots.sh $tmp/$name.poly > $tmp/$name.roots)

## SIEVING_STEP
# note: the following was tested with revision 329 of polyselect and sieve
sieve/sieve -poly $tmp/$name.poly -fb $tmp/$name.roots -1000000 1000000 1 2500\
 > $tmp/$name.rels_raw
# checking norms and splitting large cofactors
sieve/checknorms -poly $tmp/$name.poly $tmp/$name.rels_raw > $tmp/$name.rels

./merge_linalg_sqrt.sh $tmp/$name


