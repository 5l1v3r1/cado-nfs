Prepare a database of small primes grouped by bitsize and class modulo 12:
==========================================================================

- compile primedb.c:
  gcc -std=c99 primedb.c -o primedb -lgmp

- run the script with a given location for the primeDB:
  ./prepare_primedb.sh /localdisk/primes

Run the benchmark / statistic generator for your favorite method:
=================================================================

- Edit the run_stat.sh script and modify the following variables:
    CADO        Path where Cado-nfs was compiled
    PRIME_DB    The location where you prepared the database of primes

- run the script:
  ./run_stat.sh <method> <B1> <B2> <sigma>

  Examples:
    ./run_stat.sh ecm 500 10000 17
    ./run_stat.sh ecmm12 500 10000 2
    ./run_stat.sh pm1 200 4000 1
    ./run_stat.sh pp1_27 200 4000 1
    ./run_stat.sh pp1_65 200 4000 1

  Notes:
  * for pm1 and pp1, the parameter sigma is ignored.
  * pp1_27 uses 2/7 as starting point, whereas pp1_65 uses 6/5.
  * ecm corresponds to the BRENT12 curves in facul.c.
  * ecmm12 corresponds to the MONTY12 curves in facul.c.

  If you have a file all.st containing all methods you want to test, you
  can create a file of statistics with:
    while read m b1 b2 p; do ./run_stat.sh $m $b1 $b2 $p; done < all.st
