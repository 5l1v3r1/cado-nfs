General:
========

* improve the use of free relations: currently we generate free relations
  up to the algebraic factor base bound (alim). We can do much better:

  (a) after the purge phase (removal of singletons), find all remaining
      primes on the algebraic side
  (b) determine those primes for which the algebraic polynomial completely
      splits into linear factors
  (c) add free relations for those primes

  In particular when using the lattice siever, all special-q's for which f(x)
  completely splits should appear in (b).

* portability: we should check improve portability on Win64, where
  long has 32 bits (http://technet.microsoft.com/en-us/library/bb496995.aspx).
  See http://gmplib.org/list-archives/gmp-discuss/2008-June/003243.html and
  the 3 possible models (most C programs in CADO-NFS assume LP64):
  * LP64 defines "int" as 32 bits and "long" as 64 bits.
  * LLP64 defines "int" and "long" as 32 bits, and an additional type
    (usually called "long long") as 64 bits.
  * ILP64 defines "int" and "long" as 64 bits.

Purge:
======

* in the first pass, we can identify all algebraic ideals corresponding to a
  given prime p, and even identify them to the ideal p on the rational side,
  to reduce the memory usage. Some singletons will not be identified in this
  first pass, but later passes (with fewer remaining relations) will remove
  them.
  

