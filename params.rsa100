# Use this file like this:
# cadofactor.pl param=params.rsa100 machines=mach_desc.rsa100
# (update mach_desc.rsa100 if needed)

###########################################################################
# General parameters
###########################################################################

wdir=/localdisk/tmp/rsa100 # directory where temporary files are put
name=rsa100             # basename for temporary files
cadodir=$CADO           # where to find cado binaries
parallel=1              # do we use parallel computation?
delay=120               # time in seconds between two checks

machines=mach_desc.rsa100 # file describing available computers for parallel
                          # computation

n=1522605027922533360535618378132637429718068114961380688657908494580122963258952897654000350692006139

###########################################################################
# Polynomial selection with Kleinjung's algorithm
###########################################################################

degree=5                # degree of the algebraic polynomial
kjdelay=10              # time between two checks
selectnice=0            # nice level for selection

## Most important parameters of kleinjung
kjM=1.7e14              # maximum norm allowed
kjl=5                   # minimal number of primes in lc(g)
kjadmin=1               # min value for lc(f)
kjadmax=21000000        # max value for lc(f)
kjadrange=1.2e6         # individual tasks

## Other parameters of kleinjung
kjkeep=1                # number of preselected polynomials
kjkmax=10               # rotation is bounded by 2^kmax
kjincr=60               # forced divisor of lc(f)
kjpb=256                # bound on primes allowed in lc(g)
kjp0max=1000            # bound on the additional factor in lc(g)

###########################################################################
# Sieve
###########################################################################

rlim=600000
alim=1200000
lpbr=24
lpba=24
mfbr=48
mfba=48
rlambda=2.1
alambda=2.3

I=11                    # Sieving range in lattice siever
qmin=1200000            # Start of the special-q range
qrange=10000            # The size of an elementary sieving task
checkrange=1            # We check if we have enough after each step
                        # of that many relations found.
sievenice=0             # nice level for the sieving jobs

###########################################################################
# Filtering
###########################################################################

excess=100000           # minimal excess wanted after purge
                        # (don't start merge otherwise)
                        # 20k is largely enough for a c59, for a larger
                        # number 400k should be ok
prune=1.0               # les brunes comptent pas pour des...
keeppurge=1000000       # maximal excess wanted after purge
                        # (purge shrinks if needed)
keep=160                # excess wanted after merge
maxlevel=10             # ???
cwmax=100               # ???
rwmax=100               # ???
ratio=1.5               # ???
bwstrat=1
#  maxpr=???
#  maxpa=???
#  nrels_dup=???ke

###########################################################################
# Linear algebra
###########################################################################

bwmt=2                  # Multithreading level of Block-Wiedemann
linalg=bw               # Choose linalg algorithm: bl or bw

###########################################################################
# Characters
###########################################################################

nkermax=30              # maximal size of computed kernel
nchar=50                # number of characters
